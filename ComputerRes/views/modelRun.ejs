<!DOCTYPE html>
<html>
<head>
    <title>模型运行信息</title>
    <%- include headInclude.ejs %>
    <link href="/css/uploadfile.css" rel="stylesheet" />
    <link href="/css/ol.css" type="text/css"/>
    <link rel="stylesheet" href="/css/ol3-layerswitcher.css" />
    <!--<link rel="stylesheet" href="/css/layerswitcher.css" />-->
</head>
<body id="myBody" class="sticky-header">
<section >
    <!-- 左导航栏 -->
    <%- include header.ejs %>
    <div class="main-content">
        <!-- 上导航栏 -->
        <%- include nav.ejs %>
        <div class="panel panel-primary">
            <div class="panel-heading">
                模型服务信息
                <span class="tools pull-right">
                    <a href="javascript:;" class="fa fa-chevron-down"></a>
                 </span>
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="col-md-2">
                        <div class="blog-img">
                            <% if(host == 'localhost'){ %>
                                <% if(msr.msr_ms == null || msr.msr_ms.ms_img == null || msr.msr_ms.ms_img == ''){
                                %><img src="/images/modelImg/default.png" alt="" ><%
                                }
                                else {
                                %><img width="128" height="128" src="/images/modelImg/<%=msr.msr_ms.ms_img %>" alt="<%=msr.msr_ms.ms_model.m_name %>" ><%
                                }%>
                            <% }else{ %>
                                <% if(msr.msr_ms_img == null || msr.msr_ms.ms_img == ''){
                                    %><img src="http://<%=host %>:<%=port %>/images/modelImg/default.png" alt="<%=msr.msr_ms.ms_model.m_name %>" ><%
                                }
                                else {
                                    %><img width="128" height="128" src="http://<%=host %>:<%=port %>/images/modelImg/<%=msr.msr_ms.ms_img %>" alt="<%=msr.msr_ms.ms_model.m_name %>" ><%
                                }%>
                            <% } %>
                        </div>
                    </div>
                    <div class="col-md-7">
                        <p style="font-size: 14px; color:#aaa" >
                            <strong>模型名称&nbsp;:&nbsp;</strong><%=msr.msr_ms.ms_model.m_name  %>
                            <br />
                            <strong>模型类型&nbsp;:&nbsp;</strong><%=msr.msr_ms.ms_model.m_type %>
                            <br />
                            <strong>版本号&nbsp;:&nbsp;</strong><%=msr.msr_ms.mv_num %>
                            <br />
                            <strong>所在平台&nbsp;:&nbsp;</strong><%
                            if(msr.msr_ms.ms_platform == 1)
                            {
                            %><span class="label label-info">
                                    <i class="fa fa-windows"></i>
                                    windows
                                </span><%
                            }
                            else if(msr.msr_ms.ms_platform == 2)
                            {
                            %><span class="label label-info">
                                    <i class="fa fa-linux"></i>
                                    linux
                                </span><%
                            }
                            else
                            {
                            %><span class="label label-info">
                                    未知平台
                                </span><%
                            }
                            %>
                            <br />
                            <strong>部署时间&nbsp;:&nbsp;</strong><%=msr.msr_ms.ms_update %>
                            <br />
                            <strong>状态&nbsp;:&nbsp;</strong><% if(msr.msr_ms.ms_status == 1){
                            %><span class="badge badge-success">可用</span><%
                            }else {
                            %><span class="badge badge-defult">不可用</span><%
                            }%>
                            <br />
                            <strong>描述&nbsp;:&nbsp;</strong>
                            <br />
                            <%=msr.msr_ms.ms_des %>
                        </p>
                        <% if(msr.msr_ms.ms_model.m_url != null)
                        {
                        %><a style="more" href="<%=msr.msr_ms.ms_model.m_url %>" >更多信息</a><%
                        }%>
                        <br />
                        </p>
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-info">
            <div class="panel-heading">
                模型运行信息
                <span class="tools pull-right">
                    <a href="javascript:;" class="fa fa-chevron-down"></a>
                 </span>
            </div>
            <div class="panel-body">
                <p><strong>模型开始时间&nbsp;:&nbsp;</strong><%= msr.msr_date.toLocaleString() %></p>
                <p><strong>模型调用者&nbsp;:&nbsp;</strong><%if(msr.msr_user.u_type == 0){ %>本地调用者<% }
                else {%>外部调用者<%}%>&nbsp;&nbsp;<%= msr.msr_user.u_name %></p>
                <p><strong>运行实例GUID&nbsp;:&nbsp;</strong><%= msr.msr_guid %></p>
                <p><strong>输入数据&nbsp;:&nbsp;</strong><br />
                    <% for(var i = 0; i < msr.msr_input.length; i++) { %>
                        <%=msr.msr_input[i].StateId %>
                        &nbsp;&nbsp;&nbsp;
                        <%=msr.msr_input[i].Event %>
                        &nbsp;:&nbsp;
                        <a href="/geodata/<%=msr.msr_input[i].DataId %>" ><%=msr.msr_input[i].DataId %></a>
                        &nbsp;&nbsp;&nbsp;
                        <a><span class="udx_snapshot btn-lg" data-toggle="modal" data-target="#myModal" id="<%=msr.msr_input[i].DataId %>">Snapshot</span></a>
                    <br />
                    <%}%>
                </p>
                <p><strong>输出数据&nbsp;:&nbsp;</strong><br />
                    <span id="sp_dataoutput">

                    </span>
                </p>
                <p id="p_des" style="white-space: pre-line">
                    <strong>模型运行描述信息&nbsp;:&nbsp;</strong>
                    <br />
                    <%=msr.msr_des
                    %>
                </p>
                <p><strong>运行时间&nbsp;:&nbsp;</strong><span id="sp_time"><%=msr.msr_time.toString() %>&nbsp;s&nbsp;</span></p>
                <p><strong>当前进度&nbsp;:&nbsp;</strong></p>
                <div id="bar_pro_div" class="progress progress-striped active progress-sm">
                    <div id="bar_pro" style="width: 0%" aria-valuemax="100" aria-valuemin="0" aria-valuenow="100" role="progressbar" class="progress-bar progress-bar-success">
                        <span class="sr-only">40% 完成</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- 模态框（Modal） -->
        <!--TODO 打开modal后滚动条对原始窗体不作用-->
        <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="overflow-y: hidden">
            <div class="modal-dialog" style="width: 750px;">
                <div class="modal-content">
                    <div class="modal-header" style="background-color: rgba(0,0,0,0);width: 750px;position: absolute;top: 0;left: 0;z-index: 100;">
                            <button type="button" id="close-modal" class="close" data-dismiss="modal" aria-hidden="true" style="color: #000;">
                                &times;
                            </button>
                            <h4 class="modal-title" id="myModalLabel" style="color: #000;">
                                UDX Visualization
                            </h4>
                        </div>
                        <div class="modal-body" style="padding: 0;">
                        <div id="map" style="width:750px;height: 500px;" class="map"></div>
                    </div>
                    <!--<div class="modal-footer">-->
                        <!--<button type="button" class="btn btn-default" data-dismiss="modal">关闭-->
                        <!--</button>-->
                        <!--<button type="button" class="btn btn-primary">-->
                            <!--提交更改-->
                        <!--</button>-->
                    <!--</div>-->
                </div><!-- /.modal-content -->
            </div><!-- /.modal -->
        </div>
        <%- include footer.ejs %>
    </div>
</section>
<%- include footerInclude.ejs %>
<script src="/js/polyfill.min.js"></script>
<script src="/js/ol.js"></script>
<script src="/js/ol3-layerswitcher.js"></script>
<script src="/js/proj4.js"></script>
<script type="text/javascript" src="/js/output/bundle.js" ></script>
<script type="text/javascript">
    $(document).ready(function () {
        var blFinish = false;
        var interval = setInterval(function () {
            if(!blFinish)
            {
                $.ajax({
                    url : '/modelins/json/<%=msr.msr_guid %>',
                    success : function (data) {
                        var resJson = JSON.parse(data);
                        if(resJson.res == null)
                        {
                            blFinish = true;
                            ProcessFinished();
                            clearInterval(interval);
                            $.ajax({
                                url : '/modelserrun/json/<%=msr._id %>',
                                success : function (data) {
                                    var jsItem = JSON.parse(data);
                                    var descript = jsItem.msr.msr_des.replace(/\r\n/g, '<br />');
                                    $('#p_des').html('<strong>模型运行描述信息&nbsp;:&nbsp;</strong><br />' + descript);
                                    $('#sp_time').html( jsItem.msr.msr_time + '&nbsp; s &nbsp;');
                                    if(jsItem.msr.msr_status == 1)
                                    {
                                        var output = '';
                                        for(var i = 0; i < jsItem.msr.msr_output.length; i++)
                                        {
                                            output += jsItem.msr.msr_output[i].StateId +
                                                    '&nbsp;&nbsp;&nbsp;' + jsItem.msr.msr_output[i].Event +
                                                    '&nbsp;:&nbsp;<a href="/geodata/' + jsItem.msr.msr_output[i].DataId + '" >' +
                                                    jsItem.msr.msr_output[i].DataId +'</a>&nbsp;&nbsp;&nbsp;&nbsp;' +
                                                    '<a><span class="udx_snapshot" id="' + jsItem.msr.msr_output[i].DataId + '">Snapshot</span></a>' +
                                                    '<br />';
                                        }

                                        $('#sp_dataoutput').html(output);
                                    }
                                }
                            });
                        }
                        else if(resJson.res == 'suc')
                        {
                            switch (resJson.mis.state)
                            {
                                case 'MC_ENTER':
                                {
                                    setProcess(10);
                                    break;
                                }
                                case 'MC_REQUEST':
                                {
                                    setProcess(20);
                                    break;
                                }
                                case 'MC_CHECKDATA':
                                {
                                    setProcess(35);
                                    break;
                                }
                                case 'MC_CALCULATE':
                                {
                                    setProcess(50);
                                    break;
                                }
                                case 'MC_CHECKRES':
                                {
                                    setProcess(75);
                                    break;
                                }
                                case 'MC_RESPONSE':
                                {
                                    setProcess(90);
                                    break;
                                }
                                case 'MC_EXIT':
                                {
                                    setProcess(100);
                                    break;
                                }
                            }
                        }
                    }
                })
            }
        }, 500);
    });

    function setProcess(per) {
        $('#bar_pro').css('width', per.toString() + '%');
    }
    
    function ProcessFinished() {
        $('#bar_pro').css('width','100%');
    }


</script>
<script type="text/javascript">
    $("#close-modal").click(function () {
        var nice = $("html").niceScroll();
        nice.opt.enablemousewheel = true;
        nice.opt.mousescrollstep = 40;
    })

    $(".udx_snapshot").click(function () {
        var nice = $("html").niceScroll();
        nice.opt.enablemousewheel = false;
        nice.opt.mousescrollstep = 0;
        if($('#map:has(canvas)').length!=0){
            $("#map").empty();
        }
        $.ajax({
            url:'/geodata/snapshot/' + this.id,
            success:function (data) {
                var rst = JSON.parse(data);
                console.log(rst.data)
                if(rst.suc == true){
                    var imageExtent,projection,map;
                    var ENCorner = [rst.ENCorner[0],rst.ENCorner[1]];
                    var WSCorner = [rst.WSCorner[0],rst.WSCorner[1]];
                    ENCorner = proj4('EPSG:3857').forward(ENCorner);
                    WSCorner = proj4('EPSG:3857').forward(WSCorner);
                    projection = 'EPSG:3857';
                    imageExtent = [WSCorner[0],WSCorner[1],ENCorner[0],ENCorner[1]];
                    console.log(imageExtent);
                    if(rst.dataType == 'geotiff'){
                        map = new ol.Map({
                            layers: [
//                                new ol.layer.Group({
//                                    'title': 'Base maps',
//                                    layers: [
//                                        new ol.layer.Tile({
//                                            title: 'OSM',
//                                            type: 'base',
//                                            visible: true,
//                                            source: new ol.source.OSM()
//                                        })
//                                    ]
//                                }),
                                new ol.layer.Group({
                                    title: 'Overlays',
                                    layers: [
                                        new ol.layer.Tile({
                                            title: 'OSM',
//                                            type: 'base',
                                            visible: true,
                                            source: new ol.source.OSM()
                                        }),
                                        new ol.layer.Image({
                                            title: 'geotiff',
                                            source: new ol.source.ImageStatic({
                                                ratio: 1,
                                                params: {'LAYERS': 'show:0'},
                                                url: rst.data,
                                                imageExtent: imageExtent,
                                                projection:projection
                                            })
                                        })
                                    ]
                                })
                            ],
                            target: 'map',
                            view: new ol.View({
                                center: ol.extent.getCenter(imageExtent),
                                projection:projection
                            })
                        });
                    }
                    else if(rst.dataType == 'shp'){
                        map = new ol.Map({
                            layers: [
//                                new ol.layer.Group({
//                                    'title': 'Base maps',
//                                    layers: [
//                                        new ol.layer.Tile({
//                                            title: 'OSM',
//                                            type: 'base',
//                                            visible: true,
//                                            source: new ol.source.OSM()
//                                        })
//                                    ]
//                                }),
                                new ol.layer.Group({
                                    title: 'Layers',
                                    layers: [
                                        new ol.layer.Tile({
                                            title: 'OSM',
//                                            type: 'base',
                                            visible: true,
                                            source: new ol.source.OSM()
                                        }),
                                        new ol.layer.Vector({
                                            ratio: 1,
                                            params: {'LAYERS': 'show:0'},
                                            title: 'shapefile',
                                            source: new ol.source.Vector({
                                                url: rst.data,     // 地图来源
                                                format: new ol.format.GeoJSON()    // 解析矢量地图的格式化类
                                            })
                                        })
                                    ]
                                })
                            ],
                            target: 'map',
                            view: new ol.View({
                                center: ol.extent.getCenter(imageExtent),
                                projection:projection
                            })
                        });
                    }
                    map.getView().fit(imageExtent, map.getSize());
                    var layerSwitcher = new ol.control.LayerSwitcher({
                        tipLabel: 'Légende' // Optional label for button
                    });
                    map.addControl(layerSwitcher);
                }
                else{
                    alert('udx data err!');
                    $('#close-modal').trigger("click");
                }
            }
        })
    })
</script>
</body>
</html>
